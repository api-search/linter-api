{"version":3,"file":"index.iife.js","sources":["../../src/index.js"],"sourcesContent":["const CONDITIONAL_EXP = 'ConditionalExpression';\n\nexport default {\n\tname: 'ternary',\n\n\tinit(jsep) {\n\t\t// Ternary expression: test ? consequent : alternate\n\t\tjsep.hooks.add('after-expression', function gobbleTernary(env) {\n\t\t\tif (env.node && this.code === jsep.QUMARK_CODE) {\n\t\t\t\tthis.index++;\n\t\t\t\tconst test = env.node;\n\t\t\t\tconst consequent = this.gobbleExpression();\n\n\t\t\t\tif (!consequent) {\n\t\t\t\t\tthis.throwError('Expected expression');\n\t\t\t\t}\n\n\t\t\t\tthis.gobbleSpaces();\n\n\t\t\t\tif (this.code === jsep.COLON_CODE) {\n\t\t\t\t\tthis.index++;\n\t\t\t\t\tconst alternate = this.gobbleExpression();\n\n\t\t\t\t\tif (!alternate) {\n\t\t\t\t\t\tthis.throwError('Expected expression');\n\t\t\t\t\t}\n\t\t\t\t\tenv.node = {\n\t\t\t\t\t\ttype: CONDITIONAL_EXP,\n\t\t\t\t\t\ttest,\n\t\t\t\t\t\tconsequent,\n\t\t\t\t\t\talternate,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\t// if binary operator is custom-added (i.e. object plugin), then correct it to a ternary node:\n\t\t\t\t// Note: BinaryExpressions can be stacked (similar to 1 + 1 + 1), so we have to collapse the stack\n\t\t\t\t// Only do one level at a time so we can unroll as we pop the ternary stack\n\t\t\t\telse if (test.operator === ':') {\n\t\t\t\t\t// this happens when the alternate is a ternary\n\t\t\t\t\tif (!consequent.right) {\n\t\t\t\t\t\tthis.throwError('Expected :');\n\t\t\t\t\t}\n\t\t\t\t\tconst node = findLastBinaryNode(consequent);\n\t\t\t\t\ttest.right = {\n\t\t\t\t\t\ttype: CONDITIONAL_EXP,\n\t\t\t\t\t\ttest: test.right,\n\t\t\t\t\t\tconsequent: node.left,\n\t\t\t\t\t\talternate: node === consequent ? node.right : {\n\t\t\t\t\t\t\t// temporary values because we still have to wait to pop the consequent...\n\t\t\t\t\t\t\toperator: ':',\n\t\t\t\t\t\t\tleft: node.right,\n\t\t\t\t\t\t\tright: consequent.right,\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t\tenv.node = test;\n\t\t\t\t}\n\t\t\t\telse if (consequent.operator === ':') {\n\t\t\t\t\tconvertBinaryToConditional(findLastBinaryNode(consequent), test);\n\t\t\t\t\tenv.node = consequent;\n\t\t\t\t}\n\t\t\t\telse if (consequent.alternate) {\n\t\t\t\t\t// cleanup the temporary placeholder we made, now that we have the consequent\n\t\t\t\t\tlet alternate = consequent.alternate;\n\t\t\t\t\twhile (alternate.alternate) {\n\t\t\t\t\t\talternate = alternate.alternate;\n\t\t\t\t\t}\n\t\t\t\t\tenv.node = {\n\t\t\t\t\t\ttype: CONDITIONAL_EXP,\n\t\t\t\t\t\ttest,\n\t\t\t\t\t\tconsequent,\n\t\t\t\t\t\talternate: alternate.right,\n\t\t\t\t\t};\n\t\t\t\t\tdelete alternate.operator;\n\t\t\t\t\tdelete alternate.right;\n\t\t\t\t\tObject.assign(alternate, alternate.left);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.throwError('Expected :');\n\t\t\t\t}\n\n\t\t\t\t// ? and : precedence are before '||' (which defaults to 1)\n\t\t\t\t// object plugin sets : precedence to 0.95, so check for less than that\n\t\t\t\t// (which would capture assignment operators, which the plugin sets at 0.9)\n\t\t\t\tif (env.node.test && env.node.test.operator && jsep.binary_ops[env.node.test.operator] < 0.95) {\n\t\t\t\t\tconst node = env.node;\n\t\t\t\t\tenv.node = node.test;\n\t\t\t\t\tenv.node.right = {\n\t\t\t\t\t\ttype: CONDITIONAL_EXP,\n\t\t\t\t\t\ttest: node.test.right,\n\t\t\t\t\t\tconsequent: node.consequent,\n\t\t\t\t\t alternate: node.alternate,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * @param {jsep.Expression} node\n\t\t * @returns {jsep.Expression}\n\t\t */\n\t\tfunction findLastBinaryNode(node) {\n\t\t\twhile (node.left && node.left.operator === ':') {\n\t\t\t\tnode = node.left;\n\t\t\t}\n\t\t\treturn node;\n\t\t}\n\n\t\t/**\n\t\t * @param {jsep.BinaryExpression} node\n\t\t * @param {jsep.Expression} test\n\t\t * @returns {jsep.ConditionalExpression}\n\t\t */\n\t\tfunction convertBinaryToConditional(node, test) {\n\t\t\tnode.type = CONDITIONAL_EXP;\n\t\t\tnode.test = test;\n\t\t\tnode.consequent = node.left;\n\t\t\tnode.alternate = node.right;\n\t\t\tdelete node.operator;\n\t\t\tdelete node.left;\n\t\t\tdelete node.right;\n\t\t}\n\t},\n};\n"],"names":[],"mappings":"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"}