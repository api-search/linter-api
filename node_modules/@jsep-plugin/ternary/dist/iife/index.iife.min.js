var index=function(){"use strict";const e="ConditionalExpression";return{name:"ternary",init(t){function r(e){for(;e.left&&":"===e.left.operator;)e=e.left;return e}t.hooks.add("after-expression",(function(o){if(o.node&&this.code===t.QUMARK_CODE){this.index++;const n=o.node,s=this.gobbleExpression();if(s||this.throwError("Expected expression"),this.gobbleSpaces(),this.code===t.COLON_CODE){this.index++;const t=this.gobbleExpression();t||this.throwError("Expected expression"),o.node={type:e,test:n,consequent:s,alternate:t}}else if(":"===n.operator){s.right||this.throwError("Expected :");const t=r(s);n.right={type:e,test:n.right,consequent:t.left,alternate:t===s?t.right:{operator:":",left:t.right,right:s.right}},o.node=n}else if(":"===s.operator)!function(t,r){t.type=e,t.test=r,t.consequent=t.left,t.alternate=t.right,delete t.operator,delete t.left,delete t.right}(r(s),n),o.node=s;else if(s.alternate){let t=s.alternate;for(;t.alternate;)t=t.alternate;o.node={type:e,test:n,consequent:s,alternate:t.right},delete t.operator,delete t.right,Object.assign(t,t.left)}else this.throwError("Expected :");if(o.node.test&&o.node.test.operator&&t.binary_ops[o.node.test.operator]<.95){const t=o.node;o.node=t.test,o.node.right={type:e,test:t.test.right,consequent:t.consequent,alternate:t.alternate}}}}))}}}();
//# sourceMappingURL=index.iife.min.js.map
