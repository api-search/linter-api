rules:

  openapi-v3-info-contact:
    description: Ensures that all APIs have contact information.
    message: API must have a contact information available.
    given: $.info
    severity: error
    recommended: true
    type: style
    formats:
      - oas3
    then:
      field: contact
      function: truthy
  openapi-v3-do-not-use-api-for-base-path:
    description: Ensures that paths do not use /api as part of the base path.
    message: You should not use /api as part of your base path.
    severity: warn
    given: $.paths.*~
    then:
      function: pattern
      functionOptions:
        notMatch: ^/api
  openapi-v3-info-contact-email:
    description: Ensures that all APIs have contact email.
    message: API must have a contact email available.
    given: $.info.contact
    severity: error
    then:
      field: email
      function: truthy
  openapi-v3-info-contact-name:
    description: Ensures that all APIs have contact name.
    message: API must have a contact name available.
    given: $.info.contact
    severity: error
    then:
      field: name
      function: truthy
  openapi-v3-info-contact-url:
    description: Ensures that all APIs have contact URL.
    message: API must have a contact URL available.
    given: $.info.contact
    severity: error
    then:
      field: url
      function: truthy
  openapi-v3-info-description-max-length:
    description: Ensures that all APIs descriptions are under a specific length.
    message: The info object description should be less than 250 characters.
    given: $.info
    severity: error
    recommended: true
    type: style
    formats:
      - oas3
    then:
      field: description
      function: length
      functionOptions:
        max: 500
  openapi-v3-info-license:
    description: Ensures that all OpenAPIs have a information object license.
    message: The info object should have a license.
    given: $.info
    severity: error
    recommended: true
    type: style
    formats:
      - oas3
    then:
      field: license
      function: truthy
  openapi-v3-info-license-name:
    description: Ensures that all OpenAPIs have a information object license name.
    message: The info object should have a license name.
    given: $.info.license
    severity: error
    then:
      field: name
      function: truthy
  openapi-v3-info-license-url:
    description: Ensures that all OpenAPIs have a information object license url.
    message: The info object should have a license url.
    given: $.info.license
    severity: error
    then:
      field: url
      function: truthy
  openapi-v3-info-summary:
    description: Ensures that all OpenAPIs have a information object summary.
    message: The info object should have a summary.
    given: $.info
    severity: error
    recommended: true
    type: style
    formats:
      - oas3
    then:
      field: summary
      function: truthy
  openapi-v3-info-summary-max-length:
    description: Ensures that all OpenAPIs information object summary are not too long.
    message: The info object summary should be less than 50 characters.
    given: $.info
    severity: error
    recommended: true
    type: style
    formats:
      - oas3
    then:
      field: summary
      function: length
      functionOptions:
        max: 50
  openapi-v3-info-terms-of-service:
    description: Ensures that all OpenAPIs have a information object terms of service.
    message: The info object should have a terms of service.
    given: $.info
    severity: error
    recommended: true
    type: style
    formats:
      - oas3
    then:
      field: termsOfService
      function: truthy
  openapi-v3-info-title:
    description: Ensures that all OpenAPIs have a information object title.
    message: The info object should have a title.
    given: $.info
    severity: error
    recommended: true
    type: style
    formats:
      - oas3
    then:
      field: title
      function: truthy
  openapi-v3-info-version:
    description: Ensures that all OpenAPIs have a information object version.
    message: The info object should have a version.
    given: $.info
    severity: error
    recommended: true
    type: style
    formats:
      - oas3
    then:
      field: version
      function: truthy
  openapi-v3-no-request-body-on-delete:
    description: Ensures that DELETE methods do not have request bodies.
    message: Your DELETE methods should not have request bodies.
    given: $.paths.*.delete
    recommended: true
    severity: error
    then:
      field: requestBody
      function: falsy
  openapi-v3-no-request-body-on-get:
    description: Ensures that GET methods do not have request bodies.
    message: Your GET methods should not have request bodies.
    given: $.paths.*.get
    recommended: true
    severity: error
    then:
      field: requestBody
      function: falsy
  openapi-v3-openapi-version:
    description: Ensuring that a specific version of OpenAPI is being used.
    message: You do not have the right version of OpenAPI.
    severity: error
    given: $
    then:
      field: openapi
      function: pattern
      functionOptions:
        match: 3.0.3
  openapi-v3-operations-description:
    description: Ensures that each of the operations have a description.
    message: Your operations all need descriptions.
    severity: error
    given: $.paths.*[get,post,patch,put,delete]
    then:
      - field: description
        function: truthy
  openapi-v3-operations-summary:
    description: Ensures that each of the operations for an API have a summary.
    message: All of your operations need summaries.
    severity: error
    given: $.paths.*[get,post,patch,put,delete]
    then:
      - field: summary
        function: truthy
  openapi-v3-operations-summary-length:
    description: Ensures that each of the operations summaries are not too long.
    message: Your operations summaries can't be longer than 50 characters.
    given: $.paths.*[get,post,patch,put,delete]
    recommended: true
    then:
      - field: summary
        function: length
        functionOptions:
          max: 50
    type: style
  openapi-v3-operations-summary-period-none:
    severity: error
    description: Ensures that each of the operations summaries do not have an ending period.
    message: Your operations summaries should not end with a period.
    given: $.paths[*][*].summary
    then:
      function: pattern
      functionOptions:
        notMatch: \.$
  openapi-v3-operations-tags:
    description: Ensures that each of the operations have a tags property.
    message: All of your operations need to have tags.
    severity: error
    given: $.paths.*[get,post,patch,put,delete]
    then:
      - field: tags
        function: truthy
  openapi-v3-operations-tags-one:
    description: Ensures that each of the operations have at least one tag.
    message: All of your operations need to have at least one tag.
    given: $
    severity: error
    then:
      field: tags
      function: length
      functionOptions:
        min: 1
    type: style
  openapi-v3-parameters-description:
    description: Ensures that that all parameters have a descriptions.
    message: Your parameters all need descriptions.
    given: $.paths.*.*.parameters[?(@.in=='query')]
    then:
      field: description
      function: truthy
  openapi-v3-parameters-description-length:
    description: Ensures that each of parameter description isn't too long.
    message: Your parameter descriptions can't be more than 500 characters.
    given: $.paths.*.*.parameters[?(@.in=='query')].description
    then:
      field: summary
      function: length
      functionOptions:
        max: 500
  openapi-v3-parameters-example:
    description: Ensures that that all parameters have a examples.
    message: Your parameters all need examples.
    given: $.paths.*.*.parameters[?(@.example=='query')]
    then:
      - field: example
        function: truthy
      - field: examples
        function: truthy
  openapi-v3-parameters-in:
    description: Ensures that that all parameters have an in property.
    message: Your parameters all need to have in properties.
    given: $.paths.*.*.parameters[?(@.in=='query')]
    then:
      field: in
      function: truthy
  openapi-v3-parameters-name:
    description: Ensures that that all parameters have a name.
    message: Your parameter should all have names.
    given: $.paths.*.*.parameters[?(@.in=='query')]
    then:
      field: name
      function: truthy
  openapi-v3-parameters-name-length:
    description: Ensures that that parameter names aren't too long.
    message: Your parameter names should not be longer than 25 characters.
    given: $.paths.*.*.parameters[?(@.in=='query')].name
    then:
      field: summary
      function: length
      functionOptions:
        max: 25
  openapi-v3-parameters-schema:
    description: Ensures that that all parameters have a schema.
    message: Your parameter should all have a schema defined.
    given: $.paths.*.*.parameters[?(@.in=='query')]
    then:
      field: schema
      function: truthy
  openapi-v3-parameters-schema-type:
    description: Ensures that that all parameters have a schema type.
    message: Your parameter should all schema types.
    given: $.paths.*.*.parameters[?(@.in=='query')].schema
    then:
      field: type
      function: truthy
  openapi-v3-parameters-schema-type-array:
    description: Ensures that that all parameters of schema type array have items defined.
    message: Your parameter schema should have an items property if it is an array.
    given: $.paths.*.*.parameters[?(@.in=='query')].schema[?(@.type=='array')]
    then:
      field: items
      function: truthy
  openapi-v3-schema-description:
    description: Ensure all schema properties should have a description.
    message: All schema should have descriptions.
    severity: warn
    formats:
      - oas3
    given: $.components.schemas.*
    then:
      field: description
      function: truthy
  openapi-v3-schema-description-length:
    description: All schemas descriptions should be shorter than 20 characters.
    message: Description needs to be less than 20 characters.
    severity: warn
    formats:
      - oas3
    given: $.components.schemas.*
    then:
      field: description
      function: length
      functionOptions:
        max: 20
  openapi-v3-schema-names-length:
    description: Ensure schema names should be no more than 25 characters.
    message: All schema names should be less than 25 characters.
    severity: error
    given: $.components.schemas
    then:
      field: "@key"
      function: length
      functionOptions:
        max: 25
  openapi-v3-schema-names-words:
    description: Schema names should not contain certain words.
    message: Schema property names not contains the words word, word, and word.
    severity: error
    given: $.components.schemas
    then:
      field: "@key"
      function: pattern
      functionOptions:
        notMatch: \b(word|word|word)\b
  openapi-v3-schema-properties:
    description: Ensuring that all schema should have properties.
    message: All of your schema need to have properties.
    severity: error
    formats:
      - oas3
    given: $.components.schemas.*
    then:
      field: properties
      function: truthy
  openapi-v3-schema-properties-define-array-boundaries:
    description: Requires that arrays have their minimum and maximum boundaries defined.
    message: Arrays must have minItems and maxItems defined.
    formats:
      - oas3
    severity: warn
    recommended: true
    given:
      - $..properties.[?(@.type=="array")]
    then:
      - field: maxItems
        function: defined
      - field: minItems
        function: defined
  openapi-v3-schema-properties-define-number-boundaries:
    description: Ensures that all number properties have boundaries defined.
    message: Numeric types need to have a minimum and maximum property defined.
    formats:
      - oas3
    severity: warn
    recommended: true
    given:
      - $..properties.[?(@.type=="number")]
      - $..properties.[?(@.type=="integer")]
    then:
      - field: maximum
        function: defined
      - field: minimum
        function: defined
  openapi-v3-schema-properties-descriptions:
    description: Ensure that all schemas properties should have a description.
    message: All schema properties should have descriptions.
    severity: warn
    formats:
      - oas3
    given: $..properties.*
    then:
      field: description
      function: truthy
  openapi-v3-schema-properties-descriptions-length:
    description: Ensure that schema descriptions aren't too long.
    message: The schema description length needs to be less than 250 characters.
    severity: warn
    formats:
      - oas3
    given: $..properties.*
    then:
      field: description
      function: length
      functionOptions:
        max: 250
  openapi-v3-schema-properties-type:
    description: Ensuring that all schemas properties should have a type.
    message: All schema properties should have type property.
    severity: warn
    formats:
      - oas3
    given: $..properties.*
    then:
      field: type
      function: truthy
  openapi-v3-schema-required:
    description: Ensuring that all schema have a required property.
    message: All of your schema need to have a required property.
    severity: warn
    formats:
      - oas3
    given: $.components.schemas.*
    then:
      field: required
      function: truthy
  openapi-v3-schema-type:
    description: Ensuring that all schema have a type property.
    message: All schema should have a type property.
    severity: error
    formats:
      - oas3
    given: $.components.schemas.*
    then:
      field: type
      function: truthy
  openapi-v3-tags-description:
    description: Ensuring that all tags have a description.
    message: All tags should have a description.
    given: $.tags[*]
    severity: error
    then:
      field: description
      function: truthy
  openapi-v3-tags-name:
    description: Ensuring that all tags have a name.
    message: All tags should have a name.
    given: $.tags[*]
    severity: error
    then:
      field: name
      function: truthy
  openapi-v3-tags-object:
    description: Ensuring that there are tags being applied.
    message: You should have a central tags object.
    given: $
    severity: error
    then:
      field: tags
      function: truthy
  openapi-v3-tags-one:
    description: Ensuring that there is at least on tag being applied.
    message: You should have at least one tag.
    given: $
    severity: error
    then:
      field: tags
      function: length
      functionOptions:
        min: 1
    type: style
  openapi-v3-have-request-body-examples:
    severity: error
    description: Ensures that a example is always present for each request body.
    message: All request bodies should have an example present.
    given: $.paths.*.*.requestBody..[?(@.items)][?(@.type == 'object')]
    formats:
      - oas3
    then:
      - field: example
        function: truthy
  openapi-v3-info-description:
    description: Ensures that all OpenAPIs have a information description.
    message: The info object should have a description.
    given: $.info
    severity: error
    recommended: true
    type: style
    formats:
      - oas3
    then:
      field: description
      function: truthy